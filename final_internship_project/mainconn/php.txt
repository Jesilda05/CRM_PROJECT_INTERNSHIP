<?php
// functions.php

// Start session if not already started
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Function to check if a user is logged in
function isLoggedIn() {
    return isset($_SESSION['user_id']);
}

// Function to check if the logged-in user is of a specific role
function isRole($role) {
    return isset($_SESSION['role']) && $_SESSION['role'] === $role;
}

// Function to redirect to login page if not logged in
function redirectIfNotLoggedIn() {
    if (!isLoggedIn()) {
        header("Location: login.php");
        exit();
    }
}

// Function to redirect based on role
function redirectBasedOnRole() {
    if (isLoggedIn()) {
        switch ($_SESSION['role']) {
            case 'Admin':
                header("Location: admin/dashboard.php");
                break;
            case 'Salesperson':
                header("Location: salesperson/dashboard.php");
                break;
            case 'Customer':
                header("Location: customer/dashboard.php");
                break;
            case 'LeadsManager':
                header("Location: leadsmanager/dashboard.php");
                break;
            default:
                // Handle invalid role
                session_destroy();
                header("Location: login.php");
                break;
        }
        exit();
    }
}

// Function to escape HTML for output (to prevent XSS)
function escapeHTML($string) {
    return htmlspecialchars($string, ENT_QUOTES, 'UTF-8');
}

// Function to generate a random token for CSRF protection
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Function to validate CSRF token
function validateToken($token) {
    return isset($_SESSION['csrf_token']) && hash_equals($_SESSION['csrf_token'], $token);
}

// Function to store the generated CSRF token in session
function setToken() {
    $_SESSION['csrf_token'] = generateToken();
}

// Function to get the CSRF token for use in forms
function getToken() {
    return $_SESSION['csrf_token'];
}

// Function to destroy the session and log out the user
function logout() {
    session_destroy();
    header("Location: login.php");
    exit();
}
?>
